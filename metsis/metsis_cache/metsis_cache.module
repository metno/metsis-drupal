<?php

function metsis_cache_views_api() {
  return array('api' => 3, 'path' => drupal_get_path('module', 'metsis_cache') . '/includes/views',);
}

function metsis_cache_entity_info() {
  $info = array();
  $info['metsis_cache'] = array('label' => t('metsis_cache'), 'base table' => 'metsis_cache', 'entity keys' => array('id' => 'id', 'label' => 'name',), 'entity class' => 'Entity', 'controller class' => 'MetsisCacheEntityController', 'module' => 'metsis_cache',);
  return $info;
}

function metsis_cache_menu() {
  $items = array();
  $items['metsis_cache/%'] = array('title' => 'METSIS cache', 'page callback' => 'metsis_cache_listing', 'page arguments' => array(1), 'access arguments' => array('access content'),);
  return $items;
}

function metsis_cache_listing($id) {
  $objects = entity_load('metsis_cache', array($id));
  $mc = $objects[$id];
  drupal_set_title($mc->name);
  $list = entity_view('metsis_cache', $objects, 'full');
  $output = array();
  foreach ($list as $mc) {
    $output[] = drupal_render($mc);
  } return implode($output);
}

class MetsisCacheEntityController extends EntityAPIController {

  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
    $build = parent::buildContent($entity, $view_mode, $langcode, $content);
    $build['name'] = array('#type' => 'markup', '#markup' => check_plain($entity->name), '#prefix' => '<div class="metsis_cache-name">', '#suffix' => '</div>',);
    $build['deadline'] = array('#type' => 'markup', '#markup' => date('d F, Y', check_plain($entity->deadline)), '#prefix' => '<p>Deadline: ', '#suffix' => '</p>',);
    return $build;
  }

}

function metsis_cache_views_bulk_operations_object_info() {
  $object_info = array('mytype' => array('type' => 'mytype', 'base_table' => 'metsis_cache', 'load' => 'metsis_cache_mytype_load', 'oid' => 'id', 'title' => 'title',),);
  return $object_info;
}

function metsis_cache_action_info() {
  return array('metsis_cache_clear_cache_action' => array('type' => 'entity', 'label' => t('Reset Field'), 'configurable' => FALSE, 'pass rows' => TRUE,),);
}

function metsis_cache_clear_cache_action(&$entity, $context = array()) {
  
}
