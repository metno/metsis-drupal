<?php

require_once 'metsis_basket.constants.inc';
require_once 'metsis_basket.utils.inc';
require_once 'metsis_basket.config.inc';

/**
 * Implements hook_views_api().
 */
function metsis_basket_views_api() {
    return array(
      'api' => 3,
      'path' => drupal_get_path('module', 'metsis_basket') . '/includes/views',
    );
}

/**
 * Implements hook_help().
 */
function metsis_basket_help($path, $arg) {
    switch ($path) {
        case 'admin/help#metsis_basket':
            $output = '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('Work in progress .<a href
="@metsis_basket">Back to module admin.</a>.', array('@metsis_basket' => '/#overlay=admin/modules')) . '</p>';
            return $output;
        case 'admin/content/metsis_basket':
            return '<p>' . t('The basket.') . '</p>';
    }
}

/**
 * Implements hook_entity_info().
 */
function metsis_basket_entity_info() {
    global $metsis_conf;
    //if ($metsis_conf['metsis_basket_authentication_required']['boolean'] === TRUE) {
//    if ($metsis_conf['authentication_required'] === 1) {
//        adc_require_login(drupal_get_destination(), $metsis_conf['authentication_default_message']);
//    }
    if ($metsis_conf['message']['visible'] === TRUE) {
        drupal_set_message($metsis_conf['message']['under_construction'], 'warning');
    }

    $info = [];
    $info['metsis_basket'] = array(
      'label' => t('metsis_basket'),
      'base table' => 'metsis_basket',
      'entity keys' => array(
        'id' => 'iid',
        'label' => 'title',
      ),
      'entity class' => 'Entity',
      'controller class' => 'MetsisBasketController',
      'module' => 'metsis_basket',
      'uri callback' => 'metsis_basket_uri',
      'fieldable' => TRUE,
    );
    return $info;
}

/**
 * Implements hook_menu()
 */
function metsis_basket_menu() {
    $items = array();

    $items['metsis_basket/%'] = array(
      'title' => 'METSIS basket',
      'page callback' => 'metsis_basket_listing',
      'page arguments' => array(1),
      //'access arguments' => array('access content'),
      //'access arguments' => array('administer users'),
      'access callback' => array('user_is_logged_in'),
    );

    //sdpm(entity_load('metsis_cache', array(1, 2, 3, 4)));
    return $items;
}

/**
 * 
 * Callback function to list metsis_cache items
 * metsis_cache_listing{
 */
//todo 9 - not fully implemented
function metsis_basket_listing($iid) {

    $objects = entity_load('metsis_basket', array($iid));
    $mb = $objects[$iid];
    drupal_set_title($mb->name);
    $list = entity_view('metsis_basket', $objects, 'full');
    $output = array();
    foreach ($list as $mb) {
        $output[] = drupal_render($mb);
    }
    return implode($output);
}

/**
 * Implementation of hook_views_bulk_operations_object_info().
 */
//todo 9 - not fully implemented
function metsis_metsis_views_bulk_operations_object_info() {
    $object_info = array(
      'mytype' => array(
        'type' => 'mytype',
        'base_table' => 'metsis_metsis',
        'load' => 'metsis_metsis_mytype_load',
        'oid' => 'id',
        'title' => 'title',
      ),
    );
    return $object_info;
}

/*
 * metsis_basket_uri{
 */

function metsis_basket_uri($metsis_basket) {

    return array(
      'path' => 'metsis_basket/' . $metsis_basket->iid,
    );
}

/*
 * metsis_basket_uri}
 */

/**
 * Implements hook_action_info().
 * Registers custom metsis_basket actions as Drupal actions.
 */
function metsis_basket_action_info() {
    $actions = array();
    $files = metsis_basket_load_action_includes();
    foreach ($files as $filename) {
        $action_info_fn = 'metsis_basket_' . str_replace('.', '_', basename($filename, '.inc')) . '_info';
        $action_info = call_user_func($action_info_fn);
        if (is_array($action_info)) {
            $actions += $action_info;
        }
    }
    return $actions;
}

/**
 * Loads the VBO actions placed in their own include files (under actions/).
 *
 */
function metsis_basket_load_action_includes() {
    static $loaded = FALSE;

    // The list of actions is fairly static, so it's hardcoded for better
    // performance (file_scan_directory() has its cost).
    $files = array(
      'transform.action',
      'delete.action',
      'download_http.action',
      'download_odata.action',
      'visualize.action',
    );

    if (!$loaded) {
        foreach ($files as $file) {
            module_load_include('inc', 'metsis_basket', 'includes/actions/' . $file);
        }
        $loaded = TRUE;
    }
    return $files;
}






//
//function metsis_basket_form_alter(&$form, &$form_state, $form_id) {
//    //implement multistep changes
//}
//
//function metsis_basket_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {
//    //implement multistep changes
//    $current_view = views_get_current_view();
//    $current_view_name = $current_view->name;
//    if (($form['#form_id'] == "views_form_" . $current_view_name . "_page") || ($form['#form_id'] == "views_form_" . $current_view_name . "_block")) {
//        //unset($form['actions']['submit']);
//        sdpm($vbo);
//        sdpm($form);
//        sdpm($form_state);
////        $form['actions']['submit']['#value'] = "Back to basket";
//
//
//        /*
//         * test{
//         */
//        $form['submit_one'] = array(
//          '#type' => 'submit',
//          '#value' => t('Back to search'),
//          '#submit' => array('back_to_search'),
//        );
//        $form['submit_two'] = array(
//          '#type' => 'submit',
//          '#value' => t('Submit Two'),
//          '#submit' => array('say_goodbye'),
//        );
//
//        //   $form['actions']['submit'][] = array('say_hello','say_goodbye');
//        /*
//         * test}
//         */
//        $custom_url = ''
//            . '<div class="botton-wrap">'
//            . '<a class="adc-button adc-sbutton" href="/metadata_search" class="active">Back to search</a>'
//            . '</div>';
//        $form['actions']['submit']['#suffix'] = $custom_url;
//    }
//}
//
//function back_to_search() {
//    drupal_goto("metadata_search");
//}
//
//function say_goodbye() {
//    drupal_set_message("goodbye", 'status');
//}
//
