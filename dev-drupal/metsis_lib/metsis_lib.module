<?php

require_once 'includes/metsis_lib.utils.inc';

/**
 * implements hook_init
 */
function metsis_lib_init() {
    //metsis_lib_greet();
//  $_SESSION['solr']['server']['ip'] = '10.99.3.36';
//  $_SESSION['solr']['server']['port'] = '8080';
}

function metsis_lib_greet() {
    watchdog("metsis_lib", "Greetings from METSIS LIB");
}

function metsis_build_result_table($solr_object) {

    /**
     * 
     * fetching data child set is very slow
     */
    $show_children = FALSE;


    //drupal_set_message("Number of datasets found:  " . $solr_object['response']['numFound']);
    //add the children to the $_SESSION['solr']. Note that $_SESSION['solr'] was sent in as an argument
    //into this function, but will now be modified!!!
    foreach ($solr_object['response']['docs'] as $doc) {
        $parent = $doc['id'];


        /**
         * we need to find a better way of fetching information on the child datasets. This is very slow.
         * 
         */
        if ($show_children) {
            $children = get_child_datasets($parent);
            $_SESSION['solr']['parent'][$parent] = $children;
        }
    }
    /*
     * table header
     */
    $header = array(
      'datasetName' => t('Dataset name'),
      'institutions' => t("Institutions"),
      'title' => t('Title'),
      'project' => t('Project'),
      'keywords' => t('Keywords'),
      'abstract' => t('Abstract'),
      'collection_period' => t('Collection period'),
    );
    /**
     * table rows (AKA options!)
     */
    $options = array();
    /**
     * custom options (rows) test
     */
    /**
     * table with parents and children (collapsed) test
     */
    foreach ($_SESSION['solr']['response']['docs'] as $doc) {
        // parent row with parent dataset $doc['id']
        // the parent row is displayed while all the children are collapsed initially
        //clicking on parent row displays the child rows.
        // -----------------
        /**
         * thumbnails
         */
        /**
         * function needed to produce the link with thumbnail map
         */
        /**
         * backgorund map is hardcode in here. It needs to be an argument to a function and configurable
         * via the Drupal admin interface
         */
        $mapthumb_base_image = "http://public-wms.met.no/backgroundmaps/northpole.map?SERVICE=WMS&REQUEST=GetMap&VERSION=1.1.1&FORMAT=image%2Fpng&SRS=EPSG:32661&BBOX=-3000000,-3000000,7000000,7000000&WIDTH=64&HEIGHT=64&EXCEPTIONS=application%2Fvnd.ogc.se_inimage&TRANSPARENT=true&LAYERS=borders&STYLES=";
        /**
         * target URL should be the OL3 WMS client with the correct parameters for this dataset
         * for now we fake one
         */
        //TODO: mmd prefix needs to be parameterized.
        if (isset($doc['mmd_system_specific_product_metadata_dataset_wmsInfo_w:ncWmsSetup_aggregate_url'][0])) {
            $getcapdoc = $doc['mmd_system_specific_product_metadata_dataset_wmsInfo_w:ncWmsSetup_aggregate_url'][0];
        }
        else {
            drupal_set_message($doc['id'] . " is missing getCapabilities URL", 'error');
            $getcapdoc = "missing";
        }
        $target_url = 'metsis/map/wms?dataset=' . $getcapdoc;
        //$target_url = 'metsis/map/wms?dataset='.$doc['mmd_system_specific_product_metadata_dataset_wmsInfo_w:ncWmsSetup_aggregate_url'][0];
        if (array_key_exists($doc['id'], $_SESSION['solr']['map_thumbnails'])) {
            $mapthumb_overlay_image = $_SESSION['solr']['map_thumbnails'][$doc['id']];
        }
        else {
            $mapthumb_overlay_image = "sites/default/files/satellite.png";
        }
        $mapthumb = get_map_thumb_divs($mapthumb_base_image, $mapthumb_overlay_image, $target_url);


        /**
         *  end thumbnails
         */
        $dataset_name = $doc['id'];
        $institutions = !empty($doc['mmd_personnel_organisation']) ? $doc['mmd_personnel_organisation'] : ' ';
        $title = $doc['mmd_title'][0];
        /**
         * test{
         */
        if(is_array($doc['mmd_project_long_name'])){

        //sdpm($doc['mmd_project_long_name']);
        }
        /**
         * test}
         */
        $project = $doc['mmd_project_long_name'];
        $keywords = "TODO";
        $abstract = $doc['mmd_abstract'][0];
        $temporal_extent_start_date = !empty($doc['mmd_temporal_extent_start_date']) ? $doc['mmd_temporal_extent_start_date'] : ' ';
        $temporal_extent_end_date = !empty($doc['mmd_temporal_extent_end_date']) ? $doc['mmd_temporal_extent_end_date'] : ' ';
        $collection_period = $temporal_extent_start_date . " -- " . $temporal_extent_end_date;
        if (isset($doc['mmd_data_access_resource'])) {
            $data_access = $doc['mmd_data_access_resource'];
        }
        else {
            $data_access = "METADATUM 'data_access_resource' was not found!";
        }
        $options[$dataset_name] = array(
          'datasetName' => l(t($dataset_name . $mapthumb), $data_access, array(
            'external' => TRUE,
            'html' => TRUE,
            'attributes' => array('class' => array('ext_data_source', 'parent'),
            //  'id' => 'minus1id'
            )
          )),
          'institutions' => t($institutions),
          'title' => t($title),
          'project' => t($project),
          'keywords' => t($keywords),
          'abstract' => t($abstract),
          'collection_period' => t($collection_period),
          '#attributes' => array(
          //  'style' => array('display:none;'),
          // 'class' => array('accordion',
          // )
          )
        );
        //------------------
        /**
         * Child dataset - very slow method. We need to rethink this 
         */
        if ($show_children) {
            foreach ($_SESSION['solr']['parent'] [$doc['id']]['response']['docs'] as $doc) {
                $dataset_name = $doc['id'];
                $temporal_extent_start_date = !empty($doc['mmd_temporal_extent_start_date']) ? $doc['mmd_temporal_extent_start_date'] : ' ';
                $temporal_extent_end_date = !empty($doc['mmd_temporal_extent_end_date']) ? $doc['mmd_temporal_extent_end_date'] : ' ';
                $collection_period = $temporal_extent_start_date . " -- " . $temporal_extent_end_date;
                /**
                 * 
                 */
                if (isset($doc['mmd_data_access_resource'])) {
                    $data_access = $doc['mmd_data_access_resource'];
                }
                else {
                    $data_access = "METADATUM 'data_access_resource' was not found!";
                }
                /**
                 * 
                 */
                $options[$dataset_name] = array(
                  'datasetName' => l(t($dataset_name), $data_access, array(
                    'external' => TRUE,
                    'html' => TRUE,
                    'attributes' => array('class' => array('ext_data_source'),
                    // 'id' => 'somid'
                    )
                  )),
                  'institutions' => '',
                  'title' => '',
                  'project' => '',
                  'keywords' => '',
                  'abstract' => '',
                  'collection_period' => t($collection_period),
                  '#attributes' => array(
                    //  'style' => array('display:none;'),
                    'class' => array('childdataset'
                    )
                  )
                );
            }
        }
    }
    /**
     * end table with parents and children (collapsed) test
     */
    /**
     * custom options (rows) test
     *
     */
    /**
     * 
     */
//    $options['zero'] = array(
//      'datasetName' => l(t("zero"), "http://normap.nersc.no", array(
//        'external' => TRUE,
//        'html' => TRUE,
//        'attributes' => array('class' => array('zero', 'parent'),
//          'id' => 'zeroid'
//        )
//      )),
//      'institutions' => t(!empty($institutions) ? $institutions : 'NA'),
//      'title' => t(!empty($title) ? $title : 'NA'),
//      'project' => t(!empty($project) ? $project : 'NA'),
//      'keywords' => t(!empty($keywords) ? $keywords : 'NA'),
//      'abstract' => t(!empty($abstract) ? $abstract : 'NA'),
//      'collection_period' => t(!empty($collection_period) ? $collection_period : 'NA'),
//      '#attributes' => array(
//        'class' => array('accordion',
//        )
//      )
//    );
    /*
     * 
     */
    /**
     * end custom options (rows) test
     */
//  for ($i = 0; $i < $solr_object['response']['numFound']; $i++) {
//    $doc = $solr_object['response']['docs'][$i];
//    $institutions = $doc['mmd_personnel_organisation'];
//    $title = $doc['mmd_title'][0];
//    $abstract = $doc['mmd_abstract'][0];
//    //collection period test
//    $collection_period = "NA";
//    //end colletion period test
//    $project = $doc['mmd_project_long_name'];
//    $keywords = "TODO";
//    if (isset($doc['mmd_data_access_resource'])) {
//      $data_access = $doc['mmd_data_access_resource'];
//    }//TODO - this will not do since a meaningless link produced below. Need to redo all this
//    // so that missing values are flagged as such and no links are made with them.
//    else {
//      $data_access = "METADATUM 'data_access_resource' was not found!";
//    }
//    /**
//     * the thumbnails are expensive to generate on the fly and should just be a static pictures
//     * that link to the relevant OL3 page 
//     */
//    //$colormapthumb = "<br><a href='http://www.w3schools.com'><img alt='W3Schools' src='http://www.w3schools.com/images/colorpicker.gif' width='50' height='50'>";
//    $mapthumb = "<div id='map'>";
//    $mapthumb .= "<a href='http://test-metamod-precise.met.no/metamod/search/wms?ds_id=7'>";
//    $mapthumb .= "<img src='http://public-wms.met.no/backgroundmaps/northpole.map?SERVICE=WMS&REQUEST=GetMap&VERSION=1.1.1&FORMAT=image%2Fpng&SRS=EPSG:32661&BBOX=-3000000,-3000000,7000000,7000000&WIDTH=64&HEIGHT=64&EXCEPTIONS=application%2Fvnd.ogc.se_inimage&TRANSPARENT=true&LAYERS=borders&STYLES='>";
//    $mapthumb .= "</a></div>";
//    /**
//     * end map thumbnail test
//     */
//    $zzid = $doc['id'];
//    $options [$doc['id']] = array(
//      'datasetName' => l(t($zzid . $mapthumb), $data_access, array(
//        'external' => TRUE,
//        'html' => TRUE,
//        'attributes' => array('class' => array('tom', 'dick'),
//          'id' => 'zzzzz'
//        )
//      )),
//      'institutions' => t(!empty($institutions) ? $institutions : 'NA;'),
//      'title' => t(!empty($title) ? $title : 'NA' ),
//      'project' => t(!empty($project) ? $project : 'NA' ),
//      'keywords' => t(!empty($keywords) ? $keywords : 'NA' ),
//      'abstract' => t(!empty($abstract) ? $abstract : 'NA' ),
//      'collection_period' => t(!empty($collection_period) ? $collection_period : 'NA' ),
//      '#attributes' => array(
//        'style' => array('display:none;'),
//        'class' => array('parent-dataset',
//          'dataset-row',
//          'accordion'
//        )
//      )
//    );
//  }
    $form ['table'] = array(
// '#theme' => 'datatable',
      '#type' => 'tableselect',
      '#header' => $header,
      '#sticky' => false,
      '#options' => $options,
      '#empty' => t('No datasets found.'),
      '#multiple' => true,
      /**
       * TODO - level 2 datasets as tree
       */
      '#tree' => TRUE,
      '#attributes' => array(
        'class' => array(
          'datasets',
          'sortable',
        )
      )
    );
    $form ['pager'] = array(
      //'#theme' => 'pager',
      '#markup' => theme('pager', array('quantity' => 5))
    );
    return $form;
}

//~: end metsis_build_result_table

/**
 * check for block visibility. This is not ideal since we really want to test
 * the visibility of a block on the current page for the current user.
 * Also this should be a boolean function and return either TRUE or FALSE
 * Also it should be moved to the metsis_lib stuff.
 */
function is_block_visible($block_name) {
    module_load_include('inc', 'block', 'block.admin');
    global $theme_key;
    $blocks = block_admin_display_prepare_blocks($theme_key);
    foreach ($blocks as $block) {
        if ($block['delta'] == $block_name && $block['region'] != -1) {
            //sdpm("The block '" . $block['delta'] . "' is visible in the '" . $block['region'] . "' region.");
            //  return true;
        }
        //     else {
        //       return false;
        //     }
    }
}

// is_block_visible('block_five_search');

/**
 * end check for block visibility
 */

/**
 * 
 * 
 */
function get_child_datasets($parentid) {
    //$con = new HttpConnection('localhost', '8983');
    //$con = new HttpConnection('10.99.3.36', '8080');
    //$con = new HttpConnection('10.99.3.36', '8080');
    $con = new HttpConnection(SOLR_SERVER_IP, SOLR_SERVER_PORT);

    $res = $con->get('/solr/' . SOLR_CORE_CHILD . '/select', array("q" => 'mmd_related_dataset:' . $parentid,
      "fl" => 'id,mmd_temporal_extent_start_date,mmd_temporal_extent_end_date,mmd_data_access_resource',
      "rows" => SEARCH_MAXIMUM_ROWS_TO_FETCH,
      "wt" => "json",
      "indent" => "true")
    );
    return json_decode($res['body'], true);
}

/**
 * 
 */
/**
 * map thumbnails
 */

/**
 * 
 * @param type $base_image
 * @param type $overlay_image
 * @param type $target_url
 * @return type string
 * 
 */
function get_map_thumb_divs($base_image, $overlay_image, $target_url) {

    $string = <<<EOD
  <div class = "thumbnail_container">
    <div class = "thumbnail base_image">
      <!--<a target="_blank" href = "$target_url">-->
      <a class="ext_data_source" href = "$target_url">
        <img
          src = "$base_image"
        />
     </a>
    </div>
  <div class = "thumbnail overlay_image">
      <a href = "$target_url">
        <img
          src = "$overlay_image" 
        />
     </a>
   </div>
  </div>
EOD;
    return $string;
}

/**
 * end get_map_thumb_divs
 */

/**
 * adc_date_to_int(){
 */
function adc_date_to_int($string) {
    $d = new DateTime($string);
    return($d->getTimestamp());
}

/**
 * adc_date_to_int()}
 */

/**
 * 
 * @param type $hours
 * @return type
 */
function adc_get_now_minus_hours($hours) {
    return date('Y-m-d\TH:i:s\Z', time() - 3600 * $hours);
}

/**
 * @param $type - the type of messages that should be checked
 *
 * Removes any duplicate messages from the messages session
 */
function adc_remove_duplicate_messages($type) {
    $stack = array();
    if (isset($_SESSION['messages'][$type])) {
        foreach ($_SESSION['messages'][$type] as $k => $msg) {
            if (in_array($msg, $stack)) {
                // Message is already set - remove it
                unset($_SESSION['messages'][$type][$k]);
            }
            else {
                // Add message to stack
                $stack[] = $msg;
            }
        }
    }
}

/**
 * adc_parse_solr_mmd_type_one{
 */
function adc_parse_solr_mmd_type_one($metadata_element) {
    $element_array = [];
    if (is_array($metadata_element)) {
        foreach ($metadata_element as $k => $v) {
            $la = explode(",", $v);
            $lal = explode(":", $la[0], 2);
            $lar = explode(":", $la[1], 2);
            /**
             * Need to keep single quotes since these are used by some providers (e.g. NBS)
             * in the data access URL
             */
            $element_array[$lal[0]] = str_replace(array('"'), '', $lal[1]);
            //$element_array[$lal[0]] = str_replace(array('\'', '"'), '', $lal[1]);
            $element_array[$lal[0] . " " . $lar[0]] = $lar[1];
        }
    }
    //sdpm($element_array);
    return $element_array;
}

/**
 * adc_parse_solr_mmd_type_one}
 */

/**
 * metsis_get_parent_facet_field{
 * @param type $mmd_metadata_field
 * @return type
 */
//function metsis_get_parent_facet_field($mmd_metadata_field) {
//    $facet_con = new HttpConnection(SOLR_SERVER_IP, SOLR_SERVER_PORT);
//    $facet_qres = $facet_con->get('/solr/' . SOLR_CORE_PARENT . '/select', array(
//      "q" => "*:*",
//      "rows" => 1,
//      "facet" => "true",
//      "facet.field" => $mmd_metadata_field,
//      "wt" => "json",
//        )
//    );
//    return json_decode($facet_qres['body'], true);
//}

/**
 * metsis_get_parent_facet_field}
 */


/**
 * tests{
 */

/**
 * tests}
 */