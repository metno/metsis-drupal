<?php

require_once 'metsis_wms.constants.inc';

/**
 * TODO:
 * Need to add admin help pages and configure interface. 
 * Need to add warning that $node_title cannot be deleted without disabling the metsis_wms 
 * module.
 * Need to turn of 
 */
function metsis_wms_init() {
//    drupal_add_js(drupal_get_path('module', 'metsis_wms') . '/js/bundle.js');
    //drupal_add_js(drupal_get_path('module', 'metsis_wms') . '/js/getWMS.js');
    //drupal_add_css(drupal_get_path('module', 'metsis_wms') . '/css/style.min.css');
    // sdpm("metsis_wms_init()");
}

/**
 * 
 * implements hook_block_menu
 * create drupal mmd_keywords/autocomplete path
 */
function metsis_wms_menu() {

    $items['metsis_wms'] = array(
      'title' => 'METSIS OL3 WMS node',
      'page callback' => 'get_custom_content',
      'access arguments' => array('access content'),
        //'type' => MENU_CALLBACK
    );
//sdpm("metsis_wms_menu()");
    return $items;
}

/**
 * Custom callback function.
 */
function get_custom_content() {
    //$markup=  get_markup();
    //sdpm(htmlspecialchars_decode($markup));
    //$input = isset($_GET['email']) ? check_plain($_GET['email']) : '';
    //$datasetURL = filter_input(INPUT_GET, "datasetURL", FILTER_VALIDATE_EMAIL);
    $datasetURL = filter_input(INPUT_GET, "datasetURL");
    //  var_dump($datasetURL);
    //sdpm($datasetURL);
    $content = '<div class="map container"><div id="map"></div><div id="lyr-switcher"></div>'
        . '<div id="proj-container"></div><div id="timeslider-container"></div></div>'
        . '<div id="wmsURL" class="element-hidden">' . $datasetURL . '</div>';

//  $content['raw_markup'] = array(
//    '#type' => 'markup',
//    '#markup' => '<div class="map container"><div id="map"></div><div id="lyr-switcher"></div>'
//    . '<div id="proj-container"></div><div id="timeslider-container"></div></div>'
//    . '<div id="wmsURL" class="element-hidden">'.$datasetURL.'</div>',
//   // '#markup' => $input,
//  );
    //sdpm("get_custom_content()");
    return $content;
}

/**
 * 

  function metsis_wms_init() {
  $node_title = "METSIS OL3 WMS client node";
  if (!node_exists($node_title)) {
  drupal_set_message("Creating " . $node_title);
  wms_client_node($node_title);
  metsis_wms_node();
  }
  }
 */

/**
 * need to add clean up code here
 */
function metsis_wms_exit() {
// sdpm("metsis_wms_exit()"); 
}

/**
 * create an OL3 WMS client node
 */
function metsis_wms_node() {
    //  sdpm("metsis_wms_node()");
    global $user;

    $values = array(
      'type' => 'page',
      'uid' => $user->uid,
      'status' => 1,
      'comment' => 1,
      'promote' => 0,
    );
    $entity = entity_create('node', $values);

// Now create an entity_metadata_wrapper around the new node entity
// to make getting and setting values easier
    $ewrapper = entity_metadata_wrapper('node', $entity);

// Using the wrapper, we do not have to worry about telling Drupal
// what language we are using. The Entity API handles that for us.
    $ewrapper->title->set('YOUR TITLE');

// Setting the body is a bit different from other properties or fields
// because the body can have both its complete value and its
// summary
    $my_body_content = '<div id="map">this should be the map</div>A bunch of text about things that interest me';
    $ewrapper->body->set(array('value' => $my_body_content));
    $ewrapper->body->summary->set('Things that interest me');

// Setting the value of an entity reference field only requires passing
// the entity id (e.g., nid) of the entity to which you want to refer
// The nid 15 here is just an example.
//$ref_nid = 15;
// Note that the entity id (e.g., nid) must be passed as an integer not a
// string
//$ewrapper->field_my_entity_ref->set(intval($ref_nid));
// Entity API cannot set date field values so the 'old' method must
// be used
    $my_date = new DateTime('January 1, 2017');
    $entity->field_my_date[LANGUAGE_NONE][0] = array(
      'value' => date_format($my_date, 'Y-m-d'),
      'timezone' => 'UTC',
      'timezone_db' => 'UTC',
    );

// Now just save the wrapper and the entity
// There is some suggestion that the 'true' argument is necessary to
// the entity save method to circumvent a bug in Entity API. If there is
// such a bug, it almost certainly will get fixed, so make sure to check.
    $ewrapper->save();
}

/**
 * OL3 WMS client page that is linked to from the map thumbnails
 */

/**
 * 
 * @global type $user
 * @param type $node_title
 * procedural version (deprecated)
 */
function wms_client_node($node_title) {
//sdpm("wms_client_node($node_title)");
    global $user;

    $WMSNode = new stdClass();

    //sdpm($WMSNode);

    $WMSNode->type = 'page';
    node_object_prepare($WMSNode);
    $WMSNode->uid = $user->uid;
    $WMSNode->name = $user->name;

    $WMSNode->title = $node_title;
    $WMSNode->language = 'en';
    $WMSNode->body[$WMSNode->language][0]['value'] = 'Your value';
    $WMSNode->body[$WMSNode->language][0]['summary'] = 'Your summary';
    $WMSNode->body[$WMSNode->language][0]['format'] = 'filtered_html';


    $WMSNode->menu = array(
      'enabled' => 1, // this must be set to 0 in production
      'mlid' => 0,
      'module' => 'menu',
      'hidden' => 0,
      'has_children' => 0,
      'customized' => 0,
      'options' => array(),
      'expanded' => 0,
      'parent_depth_limit' => 8,
      'link_title' => 'WMS',
      'description' => 'OL3 WMS client container',
      'parent' => 'main-menu:0',
      'weight' => 0,
      'plid' => 0,
      'menu_name' => 'main-menu'
    );

//  $WMSNode->menu['enabled'] = 0;       // 1 to enable providing a link in main menu
//  $WMSNode->menu['link_title'] = 'Your page link title';
//  $WMSNode->menu['description'] = 'Your page description';
//  $WMSNode->menu['parent'] = 'main-menu:0';
//  $WMSNode->menu['weight'] = 5;

    $WMSNode->path['alias'] = 'Your Alias';
    $WMSNode->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write

    $WMSNode->status = 1;        //(1 or 0): published or not
    $WMSNode->promote = 0;   //(1 or 0): promoted to front page
    $WMSNode->revision = 0;

    $WMSNode->changed = $_SERVER['REQUEST_TIME'];
    $WMSNode->created = $_SERVER['REQUEST_TIME'];

    node_submit($WMSNode);
    node_save($WMSNode);
    drupal_set_message("Node with nid " . $WMSNode->nid . " saved!\n");
    //sdpm($WMSNode);
}

/**
 * 
 * @param type $node_title
 * 
 */
function node_exists($node_title) {
    //  sdpm("node_exists($node_title)");
    $query = "SELECT n.title FROM node n WHERE n.title = '" . $node_title . "' ";
    $result = db_query($query);
    if (!$result->rowCount()) {
        return FALSE;
    }
    else {
        return TRUE;
    }
}

//function get_node_id($node_title) {
//  $query = "SELECT n.nid FROM node n WHERE n.title = '" . $node_title . "' ";
//  $result = db_query($query);
//  if (!$result->rowCount()) {
//    return;
//  }
//  else {
//  
//   }
//}
/**
 * todo refactor
 * 
 */
function get_markup() {
//sdpm("get_markup()");
    $string = <<<EOM
              <div class="map container">
            <div id="map"></div>            
            <div id="lyr-switcher"></div>
            <div id="proj-container"></div>
            <div id="timeslider-container"></div>
        </div>
        
        
        <script type="text/javascript">
            $(document).ready(function () {               
                var wmsClient = new wmsc({"wmsUrl":"http://thredds.met.no/thredds/wms/cryoclim/met.no/osisaf-nh-agg?SERVICE=WMS&REQUEST=GetCapabilities"}).init();                
            });
        </script>        
EOM;
    return $string;
}

/**
 * end get_map_thumb_divs
 */
/*
 * get_ol3_wms_markup{
 */
/*
 * TODO: refactor to get_metsis_map_wms_markup($externalURL,$options)
 */



//todo refactor
/**
 * 
 */

//function get_metsis_map_wms_markup($metadata_identifier) {
function get_metsis_map_wms_markup($solr_core,$metadata_identifier) {
    global $metsis_conf;
    global $base_url;
    if (is_array($metadata_identifier) && (count($metadata_identifier) > 1)) {
        adc_require_login(drupal_get_destination(), $metsis_conf['authentication_default_message']);
    }
    if ($metsis_conf['message']['visible'] === TRUE) {
        drupal_set_message($metsis_conf['message']['under_construction'], 'warning');
    }
    /**
     * test{
     * need to fetch lat lon values to center map - at least for single maps
     * multiple maps are more work and we need to fetch all lat lon values and find
     * the box that contains all products then set the map bbox.....
     */
    /**
     * test}
     */
    $fields = array(METADATA_PREFIX . "data_access_resource", METADATA_PREFIX . "data_access_wms_layers_wms_layer");
//    $wms_url_lhs = $metsis_conf['drupal_server_protocol'] . "://" . $metsis_conf['drupal_server'] . "/metsis/map/getcap?dataset=";
    $wms_url_lhs = $base_url . "/" . "metsis/map/getcap?dataset=";
    
    $wms_data = [];
    $web_map_servers = [];
    foreach ($metadata_identifier as $mi) {
        //$ldar = msb_get_fields(SOLR_CORE_PARENT, $mi, $fields);
        $ldar = msb_get_fields($solr_core, $mi, $fields);
        $wms_data[$mi]['dar'] = msb_concat_data_access_resource($ldar['response']['docs'][0][$fields[0]]);
        $wms_data[$mi]['layers'] = $ldar['response']['docs'][0][$fields[1]];
        $layers = implode('","', $wms_data[$mi]['layers'] = $ldar['response']['docs'][0][$fields[1]]);
        $layers = '"' . $layers . '"';
        /**
         * test{
         */
        //$zzecmwf = 'https://apps.ecmwf.int/wms/?token=35c87cef4741b2bec3563df04d7b1ed1';
        /**
         * test}
         */
        //if (preg_match("/xyz.+\.no/", $base_url)) {
        if ($metsis_conf['wms_restrict_layers'] === 1) {
            $web_map_servers[$mi] = '{capabilitiesUrl: "' . $wms_url_lhs . $wms_data[$mi]['dar']['OGC_WMS']['url'] . CAPDOC_POSTFIX . '",activeLayer:"' . $wms_data[$mi]['layers'][0] . '",layers: [' . $layers . ']}';
        }
        else {
            /**
             * test{
             */
            //$web_map_servers[$mi] = '{capabilitiesUrl: "' . $wms_url_lhs . $zzecmwf . CAPDOC_POSTFIX . '",activeLayer:"",layers: []}';

            /**
             * test}
             */
            $web_map_servers[$mi] = '{capabilitiesUrl: "' . $wms_url_lhs . $wms_data[$mi]['dar']['OGC_WMS']['url'] . CAPDOC_POSTFIX . '",activeLayer:"",layers: []}';
        }
    }
    $webMapServers = implode(',', $web_map_servers);

    if (is_array($metadata_identifier)) {
        $wms_urls = [];
        foreach ($metadata_identifier as $eu) {
            $wms_urls[] = $eu . CAPDOC_POSTFIX;
        }
        $wms_url_rhs = implode(",", $wms_urls);
    }
    else {
        $wms_url_rhs = $metadata_identifier . CAPDOC_POSTFIX;
    }
    $wms_url = $wms_url_lhs . $wms_url_rhs;
    /**
     * test{
     */
    //print_r($wms_url);
    /**
     * test}
     */
    $wms_map_center_lat = $metsis_conf['wms_map_center_lat'];
    $wms_map_center_lon = $metsis_conf['wms_map_center_lon'];
    $wms_map_init_zoom = $metsis_conf['wms_map_init_zoom'];
    $wms_visible_layer_title = $metsis_conf['wms_visible_layer_title'];
    //JS needs lower case for booleans "true" and "false"
    $wms_product_select = strtolower(WMS_PRODUCT_SELECT);
    $path_to_wms_module = drupal_get_path('module', 'metsis_wms');
    $path_to_css = "../../" . $path_to_wms_module . "/css/style.min.css";
    $path_to_js = "../../" . $path_to_wms_module . "/js/bundle.js";
    $path_to_metsis_lib_utils_js = "../../" . drupal_get_path('module', 'metsis_lib') . '/js/custom/utils.js';
    $path_to_jquery_update_js = "../../" . drupal_get_path('module', 'jquery_update') . "/replace/jquery/1.10/jquery.min.js";
    //$adc_buttons_css = $metsis_conf['drupal_server_protocol'] . "://" . $metsis_conf['drupal_server'] . '/' . drupal_get_path('module', 'metsis_lib') . '/css/adc-buttons.css';
    $adc_buttons_css = $base_url . '/' . drupal_get_path('module', 'metsis_lib') . '/css/adc-buttons.css';
    //$path_to_colorbox_css = "../../../sites/all/libraries/colorbox/example1/colorbox.css";
    //$path_to_colorbox_js = "../../../sites/all/libraries/colorbox/jquery.colorbox.js";
    //$zzzpage=current_path();
    $string = <<<EOM
<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <title>OpenLayers</title>
        <!--<style data-href="app.css" type="text/css"></style>-->
        <link rel="shortcut icon" href="">
        <link rel="stylesheet" href="$path_to_css" type="text/css" >
        <style>
            #map {
                width: 100%;
                /*height: 600px;*/
                height: 90%;
            }
            .map.container {
                width: 100%;
                height: 95%
            }
        </style>
        <script src="$path_to_jquery_update_js"></script>
        <script  type="text/javascript" src="$path_to_js"></script>
        <script  type="text/javascript" src="$path_to_metsis_lib_utils_js"></script>
        <style type="text/css" media="all">
        @import url("$adc_buttons_css");
        </style>
    </head>
    <body>
      <div class="ajax">
        <div class="map container ajax">
            <div id="map"></div>
            <div id="map-menu" class="layer-switcher"></div>
            <!--<div class="ui compact vertical icon menu">
                <a class="item">
                    <i class="diamond icon"></i>
                </a>
                <a class="item">
                    <i class="video camera icon"></i>
                </a>
                <a class="item">
                    <i class="video play icon"></i>
                </a>
            </div>-->
            <div id="lyr-switcher"></div>
            <div id="proj-container"></div>
            <div id="timeslider-container"></div>
        </div>


        <script type="text/javascript">
            var sClient;
            $(document).ready(function () {
                var wms = mapClient
                        .wms({
                            lon: $wms_map_center_lon,
                            lat: $wms_map_center_lat,
                            zoom: $wms_map_init_zoom,
                            webMapServers: [
                              $webMapServers
                            ],
                           productSelect: $wms_product_select});
            });
       
        </script>
        <script type="text/javascript">
         function reloadPage() {
           location.reload();
         }
        </script> 
        <div class="center">
            <div class="botton-wrap">
               <!--<a class="adc-button adc-sbutton" href="/metadata_search">Search</a>-->
               <a class="adc-button adc-sbutton adc-back" href="#">Back to results</a>
               <a class="adc-button adc-sbutton" href="/basket">Basket</a>
               <a class="adc-button adc-sbutton" onclick="reloadPage()">Reset</a>
               <!--<button onclick="reloadPage()">Reload page</button>-->
            </div>
        </div>
      </div>  
    </body>
</html>

EOM;




    /**
     * fasit{
     */
//    $string = <<<EOM
//<!doctype html>
//<html>
//    <head>
//        <meta charset="utf-8">
//        <title>OpenLayers</title>
//        <!--<style data-href="app.css" type="text/css"></style>-->
//        <link rel="shortcut icon" href="">
//        <link rel="stylesheet" href="$path_to_css" type="text/css" >
//
//        <style>
//            #map {
//                width: 100%;
//                height: 600px;
//            }
//            .map.container {
//                width: 100%;
//                height: 70%
//            }
//        </style>
//        <script src="https://code.jquery.com/jquery-1.12.1.min.js"></script>
//        <script  type="text/javascript" src="$path_to_js"></script>
//    </head>
//    <body>
//
//        <div class="map container">
//            <div id="map"></div>
//            <div id="map-menu" class="layer-switcher"></div>
//            <!--<div class="ui compact vertical icon menu">
//                <a class="item">
//                    <i class="diamond icon"></i>
//                </a>
//                <a class="item">
//                    <i class="video camera icon"></i>
//                </a>
//                <a class="item">
//                    <i class="video play icon"></i>
//                </a>
//            </div>-->
//            <div id="lyr-switcher"></div>
//            <div id="proj-container"></div>
//            <div id="timeslider-container"></div>
//        </div>
//
//
//        <script type="text/javascript">
//            var sClient;
//            $(document).ready(function () {
//                var wms = mapClient
//                        .wms({
//                            /*"visibleLayerTitle": "averaged sea ice edge",*/
//                            lon: 15.4824,
//                            lat: 78.2452,
//                            zoom: 7,
//                            /*"wmsUrl": "http://thredds.met.no/thredds/wms/cryoclim/met.no/osisaf-nh-agg?SERVICE=WMS&REQUEST=GetCapabilities",*/
//                            webMapServers: [
//                                {
//                                    capabilitiesUrl: "https://xyz.metsis.met.no/metsis/map/getcap?dataset=http://thredds.met.no/thredds/wms/cryoclim/met.no/osisaf-nh-agg?SERVICE=WMS&REQUEST=GetCapabilities",
//                                    activeLayer: 'averaged sea ice edge',
//                                    layers: []
//                                }
//                             //   {
//                             //       capabilitiesUrl: "https://xyz.metsis.met.no/metsis/map/getcap?dataset=http://thredds.met.no/thredds/wms/sea_ice/SIW-METNO-ARC-SEAICE_HR-OBS/ice_conc_svalbard_aggregated?REQUEST=GetCapabilities&VERSION=1.3.0&SERVICE=WMS",
//                             //       activeLayer: '',
//                             //       layers: []
//                             //   }
//                            ],
//                            productSelect: true});
//            });
//        </script>
//    </body>
//</html>
//
//EOM;
    /**
     * fasit}
     */
    return $string;
}

/*
 * get_ol3_wms_markup}
 */

function h_get_wms_ol_js($args_array) {

//
//$string_head = <<<SH
//    
//            var sClient;
//            $(document).ready(function () {
//                var wms = mapClient
//                        .wms({
//                            lon: $center_lat,
//                            lat: $center_lon,
//                            zoom: $zoom,
//SH;
//
//
//    $string_body = "webMapServers: [";
//    foreach ($args_array as $aa) {
//        $active_layer = $aa['active_layer'];
//        $layers = implode(",", $aa['layers']);
//        $csv_layers = '"' . $layers . '"';
//    }
//
//    $string_body 
//        .= '{';
//        .= 'capabilitiesUrl: "' . $aa . '",';
//        .= 'activeLayer: "'.$active_layer.'",';
//                                    layers: []
//                                },
//                                {
//                                    capabilitiesUrl: "http://thredds.met.no/thredds/wms/sea_ice/SIW-METNO-ARC-SEAICE_HR-OBS/ice_conc_svalbard_aggregated?REQUEST=GetCapabilities&VERSION=1.3.0&SERVICE=WMS",
//                                    activeLayer: '',
//                                    layers: []
//                                }
//                            ],
//}
//                            productSelect: true});
//            });
//
//return $string_head.$sting_body.$string_foot;
}
